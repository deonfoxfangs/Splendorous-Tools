<?xml version="1.0" encoding="utf-8"?>
<!--
Author: Deon
Required: LLamaLibrary BotBase
		  Lisbeth BotBase
		  Exbuddy Plugin
          ALL currently obtained Splendorous weapons in inventory or Armory.
-->
<!DOCTYPE Profile [
    <!-- Profile Settings -->
    <!ENTITY discardExcess "1"> <!-- Set to 1 to discard excess components after obtaining lodestar tool, set to 0 to disable -->
    <!ENTITY alc "1">
    <!ENTITY arm "1">
    <!ENTITY bsm "1">
    <!ENTITY crp "1"> <!-- If you don't want to collect a certain tool change "1" to "0" -->
    <!ENTITY cul "1">
    <!ENTITY gsm "1">
    <!ENTITY ltw "1">
    <!ENTITY wvr "1">
    <!ENTITY crpTool "41191">
    <!ENTITY bsmTool "41192">
    <!ENTITY armTool "41193">
    <!ENTITY gsmTool "41194">
    <!ENTITY ltwTool "41195">
    <!ENTITY wvrTool "41196">
    <!ENTITY alcTool "41197">
    <!ENTITY culTool "41198">
]>
<Profile>
    <Name>Splendorous Tools</Name>
    <Order>
        <LisbethCheck />
        <!-- Carpenter -->
        <If Condition="&crp; == 1">
            <If Condition="not HasItem(&crpTool;) and Core.Me.Levels[ClassJobType.Carpenter] &gt; 89">
                <LLoadProfile Path="Profiles/Splendorous CRP Tool.xml" />
            </If>
            <If Condition="&discardExcess; == 1 and HasItem(&crpTool;)">
                <RunCode name="discardCarpenter" />
            </If>
        </If>
        <!-- Blacksmith -->
        <If Condition="&bsm;== 1">
            <If Condition="not HasItem(&bsmTool;) and Core.Me.Levels[ClassJobType.Blacksmith] &gt; 89">
                <LLoadProfile Path="Profiles/Splendorous BSM Tool.xml" />
            </If>
            <If Condition="&discardExcess; == 1 and HasItem(&bsmTool;)">
                <RunCode name="discardBlacksmith" />
            </If>
        </If>
        <!-- Armorer -->
        <If Condition="&arm;== 1">
            <If Condition="not HasItem(&armTool;) and Core.Me.Levels[ClassJobType.Armorer] &gt; 89">
                <LLoadProfile Path="Profiles/Splendorous ARM Tool.xml" />
            </If>
            <If Condition="&discardExcess; == 1 and HasItem(&armTool;)">
                <RunCode name="discardArmorer" />
            </If>
        </If>
        <!-- Goldsmith -->
        <If Condition="&gsm;== 1">
            <If Condition="not HasItem(&gsmTool;) and Core.Me.Levels[ClassJobType.Goldsmith] &gt; 89">
                <LLoadProfile Path="Profiles/Splendorous GSM Tool.xml" />
            </If>
            <If Condition="&discardExcess; == 1 and HasItem(&gsmTool;)">
                <RunCode name="discardGoldsmith" />
            </If>
        </If>
        <!-- Leatherworker -->
        <If Condition="&ltw;== 1">
            <If Condition="not HasItem(&ltwTool;) and Core.Me.Levels[ClassJobType.Leatherworker] &gt; 89">
                <LLoadProfile Path="Profiles/Splendorous LTW Tool.xml" />
            </If>
            <If Condition="&discardExcess; == 1 and HasItem(&ltwTool;)">
                <RunCode name="discardLeatherworker" />
            </If>
        </If>
        <!-- Weaver -->
        <If Condition="&wvr;== 1">
            <If Condition="not HasItem(&wvrTool;) and Core.Me.Levels[ClassJobType.Weaver] &gt; 89">
                <LLoadProfile Path="Profiles/Splendorous WVR Tool.xml" />
            </If>
            <If Condition="&discardExcess; == 1 and HasItem(&wvrTool;)">
                <RunCode name="discardWeaver" />
            </If>
        </If>
        <!-- Alchemist -->
        <If Condition="&alc;== 1">
            <If Condition="not HasItem(&alcTool;) and Core.Me.Levels[ClassJobType.Alchemist] &gt; 89">
                <LLoadProfile Path="Profiles/Splendorous ALC Tool.xml" />
            </If>
            <If Condition="&discardExcess; == 1 and HasItem(&alcTool;)">
                <RunCode name="discardAlchemist" />
            </If>
        </If>
        <!-- Culinarian -->
        <If Condition="&cul;== 1">
            <If Condition="not HasItem(&culTool;) and Core.Me.Levels[ClassJobType.Culinarian] &gt; 89">
                <LLoadProfile Path="Profiles/Splendorous CUL Tool.xml" />
            </If>
            <If Condition="&discardExcess; == 1 and HasItem(&culTool;)">
                <RunCode name="discardCulinarian" />
            </If>
        </If>
        <!-- Final Quest -->
        <If Condition="not IsQuestCompleted(70341)">
            <If Condition="&crp; == 1">
                <ChangeClass Job="Carpenter" />
                <LLoadProfile Path="Quests/Dearly Bekettled.xml" />
            </If>
            <If Condition="&bsm; == 1">
                <ChangeClass Job="Blacksmith" />
                <LLoadProfile Path="Quests/Dearly Bekettled.xml" />
            </If>
            <If Condition="&arm; == 1">
                <ChangeClass Job="Armorer" />
                <LLoadProfile Path="Quests/Dearly Bekettled.xml" />
            </If>
            <If Condition="&gsm; == 1">
                <ChangeClass Job="Goldsmith" />
                <LLoadProfile Path="Quests/Dearly Bekettled.xml" />
            </If>
            <If Condition="&ltw; == 1">
                <ChangeClass Job="Leatherworker" />
                <LLoadProfile Path="Quests/Dearly Bekettled.xml" />
            </If>
            <If Condition="&wvr; == 1">
                <ChangeClass Job="Weaver" />
                <LLoadProfile Path="Quests/Dearly Bekettled.xml" />
            </If>
            <If Condition="&alc; == 1">
                <ChangeClass Job="Alchemist" />
                <LLoadProfile Path="Quests/Dearly Bekettled.xml" />
            </If>
            <If Condition="&cul; == 1">
                <ChangeClass Job="Culinarian" />
                <LLoadProfile Path="Quests/Dearly Bekettled.xml" />
            </If>
        </If>
        <LogMessage Message="All done!" />
        <RunCode Name="finish" />

    </Order>
    <CodeChunks>
        <CodeChunk Name="finish">
		<![CDATA[
			Core.OverlayManager.AddToast(() => "All requested Splendorous Tools complete! :D", TimeSpan.FromMilliseconds(10000), System.Windows.Media.Color.FromRgb(181,255,181), System.Windows.Media.Color.FromRgb(0,0,0), new System.Windows.Media.FontFamily("Microsoft Sans Serif"));
			await Coroutine.Sleep(10000);
		]]>
		</CodeChunk>
        <CodeChunk Name="discardCarpenter">
            <![CDATA[
                    await LlamaLibrary.Helpers.GeneralFunctions.StopBusy();

                    List<BagSlot> components = InventoryManager.FilledSlots.Where(cs => cs.EnglishName.EndsWith("Carpenter's Component") &&
                                                                                            (cs.EnglishName.StartsWith("Splendorous")
                                                                                             || cs.EnglishName.StartsWith("Adaptive")
                                                                                             || cs.EnglishName.StartsWith("Customized")
                                                                                             || cs.EnglishName.StartsWith("Brilliant")
                                                                                             || cs.EnglishName.StartsWith("Inspirational")
                                                                                             || cs.EnglishName.StartsWith("Nightforged"))).ToList();

                    if (components.Any())
                    {
                        foreach (var slot in components)
                        {
                            Logging.Write("Discarding Excess {0}", slot.Name);
                            LlamaLibrary.Extensions.BagSlotExtensions.Discard(slot);
                            await Coroutine.Sleep(1000);
                        }
                    }
            ]]>
        </CodeChunk>
        <CodeChunk Name="discardBlacksmith">
            <![CDATA[
                    await LlamaLibrary.Helpers.GeneralFunctions.StopBusy();

                    List<BagSlot> components = InventoryManager.FilledSlots.Where(cs => cs.EnglishName.EndsWith("Blacksmith's Component") &&
                                                                                            (cs.EnglishName.StartsWith("Splendorous")
                                                                                             || cs.EnglishName.StartsWith("Adaptive")
                                                                                             || cs.EnglishName.StartsWith("Customized")
                                                                                             || cs.EnglishName.StartsWith("Brilliant")
                                                                                             || cs.EnglishName.StartsWith("Inspirational")
                                                                                             || cs.EnglishName.StartsWith("Nightforged"))).ToList();

                    if (components.Any())
                    {
                        foreach (var slot in components)
                        {
                            Logging.Write("Discarding Excess {0}", slot.Name);
                            LlamaLibrary.Extensions.BagSlotExtensions.Discard(slot);
                            await Coroutine.Sleep(1000);
                        }
                    }
            ]]>
        </CodeChunk>
        <CodeChunk Name="discardArmorer">
            <![CDATA[
                    await LlamaLibrary.Helpers.GeneralFunctions.StopBusy();

                    List<BagSlot> components = InventoryManager.FilledSlots.Where(cs => cs.EnglishName.EndsWith("Armorer's Component") &&
                                                                                            (cs.EnglishName.StartsWith("Splendorous")
                                                                                             || cs.EnglishName.StartsWith("Adaptive")
                                                                                             || cs.EnglishName.StartsWith("Customized")
                                                                                             || cs.EnglishName.StartsWith("Brilliant")
                                                                                             || cs.EnglishName.StartsWith("Inspirational")
                                                                                             || cs.EnglishName.StartsWith("Nightforged"))).ToList();

                    if (components.Any())
                    {
                        foreach (var slot in components)
                        {
                            Logging.Write("Discarding Excess {0}", slot.Name);
                            LlamaLibrary.Extensions.BagSlotExtensions.Discard(slot);
                            await Coroutine.Sleep(1000);
                        }
                    }
            ]]>
        </CodeChunk>
        <CodeChunk Name="discardGoldsmith">
            <![CDATA[
                    await LlamaLibrary.Helpers.GeneralFunctions.StopBusy();

                    List<BagSlot> components = InventoryManager.FilledSlots.Where(cs => cs.EnglishName.EndsWith("Goldsmith's Component") &&
                                                                                            (cs.EnglishName.StartsWith("Splendorous")
                                                                                             || cs.EnglishName.StartsWith("Adaptive")
                                                                                             || cs.EnglishName.StartsWith("Customized")
                                                                                             || cs.EnglishName.StartsWith("Brilliant")
                                                                                             || cs.EnglishName.StartsWith("Inspirational")
                                                                                             || cs.EnglishName.StartsWith("Nightforged"))).ToList();

                    if (components.Any())
                    {
                        foreach (var slot in components)
                        {
                            Logging.Write("Discarding Excess {0}", slot.Name);
                            LlamaLibrary.Extensions.BagSlotExtensions.Discard(slot);
                            await Coroutine.Sleep(1000);
                        }
                    }
            ]]>
        </CodeChunk>
        <CodeChunk Name="discardLeatherworker">
            <![CDATA[
                    await LlamaLibrary.Helpers.GeneralFunctions.StopBusy();

                    List<BagSlot> components = InventoryManager.FilledSlots.Where(cs => cs.EnglishName.EndsWith("Leatherworker's Component") &&
                                                                                            (cs.EnglishName.StartsWith("Splendorous")
                                                                                             || cs.EnglishName.StartsWith("Adaptive")
                                                                                             || cs.EnglishName.StartsWith("Customized")
                                                                                             || cs.EnglishName.StartsWith("Brilliant")
                                                                                             || cs.EnglishName.StartsWith("Inspirational")
                                                                                             || cs.EnglishName.StartsWith("Nightforged"))).ToList();

                    if (components.Any())
                    {
                        foreach (var slot in components)
                        {
                            Logging.Write("Discarding Excess {0}", slot.Name);
                            LlamaLibrary.Extensions.BagSlotExtensions.Discard(slot);
                            await Coroutine.Sleep(1000);
                        }
                    }
            ]]>
        </CodeChunk>
        <CodeChunk Name="discardWeaver">
            <![CDATA[
                    await LlamaLibrary.Helpers.GeneralFunctions.StopBusy();

                    List<BagSlot> components = InventoryManager.FilledSlots.Where(cs => cs.EnglishName.EndsWith("Weaver's Component") &&
                                                                                            (cs.EnglishName.StartsWith("Splendorous")
                                                                                             || cs.EnglishName.StartsWith("Adaptive")
                                                                                             || cs.EnglishName.StartsWith("Customized")
                                                                                             || cs.EnglishName.StartsWith("Brilliant")
                                                                                             || cs.EnglishName.StartsWith("Inspirational")
                                                                                             || cs.EnglishName.StartsWith("Nightforged"))).ToList();

                    if (components.Any())
                    {
                        foreach (var slot in components)
                        {
                            Logging.Write("Discarding Excess {0}", slot.Name);
                            LlamaLibrary.Extensions.BagSlotExtensions.Discard(slot);
                            await Coroutine.Sleep(1000);
                        }
                    }
            ]]>
        </CodeChunk>
        <CodeChunk Name="discardAlchemist">
            <![CDATA[
                    await LlamaLibrary.Helpers.GeneralFunctions.StopBusy();

                    List<BagSlot> components = InventoryManager.FilledSlots.Where(cs => cs.EnglishName.EndsWith("Alchemist's Component") &&
                                                                                            (cs.EnglishName.StartsWith("Splendorous")
                                                                                             || cs.EnglishName.StartsWith("Adaptive")
                                                                                             || cs.EnglishName.StartsWith("Customized")
                                                                                             || cs.EnglishName.StartsWith("Brilliant")
                                                                                             || cs.EnglishName.StartsWith("Inspirational")
                                                                                             || cs.EnglishName.StartsWith("Nightforged"))).ToList();

                    if (components.Any())
                    {
                        foreach (var slot in components)
                        {
                            Logging.Write("Discarding Excess {0}", slot.Name);
                            LlamaLibrary.Extensions.BagSlotExtensions.Discard(slot);
                            await Coroutine.Sleep(1000);
                        }
                    }
            ]]>
        </CodeChunk>
        <CodeChunk Name="discardCulinarian">
            <![CDATA[
                    await LlamaLibrary.Helpers.GeneralFunctions.StopBusy();

                    List<BagSlot> components = InventoryManager.FilledSlots.Where(cs => cs.EnglishName.EndsWith("Culinarian's Component") &&
                                                                                            (cs.EnglishName.StartsWith("Splendorous")
                                                                                             || cs.EnglishName.StartsWith("Adaptive")
                                                                                             || cs.EnglishName.StartsWith("Customized")
                                                                                             || cs.EnglishName.StartsWith("Brilliant")
                                                                                             || cs.EnglishName.StartsWith("Inspirational")
                                                                                             || cs.EnglishName.StartsWith("Nightforged"))).ToList();

                    if (components.Any())
                    {
                        foreach (var slot in components)
                        {
                            Logging.Write("Discarding Excess {0}", slot.Name);
                            LlamaLibrary.Extensions.BagSlotExtensions.Discard(slot);
                            await Coroutine.Sleep(1000);
                        }
                    }
            ]]>
        </CodeChunk>
    </CodeChunks>
</Profile>    